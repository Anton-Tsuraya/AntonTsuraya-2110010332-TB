package Frame;

import db.Koneksi;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.HashMap;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import model.Pembayaran;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;


public class PembayaranFrame extends javax.swing.JFrame {
    
    Pembayaran pembayaran;
    private final int SEDANG_TAMBAH= 001;
    private final int SEDANG_UBAH = 002;
    
    public PembayaranFrame() {
        initComponents();
        this.setLocationRelativeTo(null);
//        status = SEDANG_TAMBAH;
        RefreshData();        
    }

    public ArrayList<Pembayaran> getPembayaranList () {
        ArrayList<Pembayaran> pembayaranList = new ArrayList<Pembayaran>();
        Koneksi koneksi = new Koneksi();
        Connection connection = koneksi.getConnection();
        
        PreparedStatement ps;
        ResultSet rs;
        String query = "SELECT pembayaran.*, pendaftaran.nama_siswa FROM pembayaran " 
                + "INNER JOIN pendaftaran ON pembayaran.no_daftar = pendaftaran.no_daftar "
                + "INNER JOIN orangtua ON pembayaran.id_ortu = orangtua.id_ortu";
        String order = " ORDER BY pembayaran.no_pembayaran";
       
        query = query+order;
        try{
            ps = connection.prepareStatement(query);

            rs = ps.executeQuery();
            while(rs.next()){
                pembayaran = new Pembayaran(
                        rs.getString("pembayaran.no_pembayaran"),
                        rs.getString("no_daftar"),
                        rs.getString("id_ortu"),                        
                        rs.getString("bayar"),    
                        rs.getString("pendaftaran.nama_siswa"));
                pembayaranList.add(pembayaran);
            }
        } catch(SQLException ex){
            System.err.println("ERROR getPembayaranList : "+ex);
            System.err.println(ex.getMessage());
        }
        return pembayaranList;
    }
    
    public void selectPembayaran(){
        ArrayList<Pembayaran> list;
        list = getPembayaranList();
        DefaultTableModel model = (DefaultTableModel)PembayaranTable.getModel();
        Object[] row =  new Object[5];
        
        for (int i=0; i<list.size(); i++){
            row[0] = list.get(i).getNoPembayaran();
            row[1] = list.get(i).getNoDaftar();
            row[2] = list.get(i).getIdOrtu();
            row[3] = list.get(i).getBayar();
            row[4] = list.get(i).getNamaSiswa();

            model.addRow(row);
        }
    }
    
        public final void RefreshData(){
        DefaultTableModel  dtmbk = (DefaultTableModel) PembayaranTable.getModel();
        dtmbk.setRowCount(0);
        selectPembayaran();
    }
    
        public final void resetForm(){
        nodaftartf.setText("");
        idortutf.setText("");        
        siswatf.setText("");
        bayarcbb.setSelectedItem("- Pilih Nominal -");
    }
        
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        nopembayarantf = new javax.swing.JTextField();
        tfspp = new javax.swing.JTextField();
        KomponenPanel = new javax.swing.JPanel();
        idortulbl = new javax.swing.JLabel();
        idortutf = new javax.swing.JTextField();
        nodaftarlbl = new javax.swing.JLabel();
        nodaftartf = new javax.swing.JTextField();
        siswalbl = new javax.swing.JLabel();
        siswatf = new javax.swing.JTextField();
        bayarlbl = new javax.swing.JLabel();
        bayarcbb = new javax.swing.JComboBox<>();
        btnSimpan = new javax.swing.JButton();
        btnUbah = new javax.swing.JButton();
        btnHapus = new javax.swing.JButton();
        btnKosong = new javax.swing.JButton();
        btnKeluar = new javax.swing.JButton();
        caribtn = new javax.swing.JButton();
        Cetakbtn = new javax.swing.JButton();
        TabelPanel = new javax.swing.JPanel();
        ScrollPane = new javax.swing.JScrollPane();
        PembayaranTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(204, 204, 204));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        KomponenPanel.setBackground(new java.awt.Color(190, 190, 190));
        KomponenPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Pembayaran", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Courier New", 1, 18))); // NOI18N

        idortulbl.setText("ID ORANG TUA");

        nodaftarlbl.setText("NO DAFTAR");

        siswalbl.setText("NAMA SISWA");

        siswatf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                siswatfActionPerformed(evt);
            }
        });

        bayarlbl.setText("BAYAR SPP");

        bayarcbb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "- Pilih Nominal -", "1 Bulan Rp.50.000", "2 Bulan Rp.100.000", "3 Bulan Rp.150.000", "4 Bulan Rp.200.000", "5 Bulan Rp.250.000", "6 Bulan Rp.300.000", "7 Bulan Rp.350.000", "8 Bulan Rp.400.000", "9 Bulan Rp.450.000", "10 Bulan Rp.500.000", "11 Bulan Rp.550.000", "1 Tahun Rp 18.250.000" }));
        bayarcbb.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                bayarcbbItemStateChanged(evt);
            }
        });

        btnSimpan.setBackground(new java.awt.Color(153, 153, 153));
        btnSimpan.setText("Save");
        btnSimpan.setBorderPainted(false);
        btnSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSimpanActionPerformed(evt);
            }
        });

        btnUbah.setBackground(new java.awt.Color(153, 153, 153));
        btnUbah.setText("Edit");
        btnUbah.setBorderPainted(false);
        btnUbah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUbahActionPerformed(evt);
            }
        });

        btnHapus.setBackground(new java.awt.Color(153, 153, 153));
        btnHapus.setText("Delete");
        btnHapus.setBorderPainted(false);
        btnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusActionPerformed(evt);
            }
        });

        btnKosong.setBackground(new java.awt.Color(153, 153, 153));
        btnKosong.setText("Clear");
        btnKosong.setBorderPainted(false);
        btnKosong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKosongActionPerformed(evt);
            }
        });

        btnKeluar.setBackground(new java.awt.Color(153, 153, 153));
        btnKeluar.setText("Return");
        btnKeluar.setBorderPainted(false);
        btnKeluar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnKeluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKeluarActionPerformed(evt);
            }
        });

        caribtn.setBackground(new java.awt.Color(153, 153, 153));
        caribtn.setText("Cari");
        caribtn.setBorderPainted(false);
        caribtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        caribtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                caribtnActionPerformed(evt);
            }
        });

        Cetakbtn.setBackground(new java.awt.Color(153, 153, 153));
        Cetakbtn.setText("Print");
        Cetakbtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Cetakbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CetakbtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout KomponenPanelLayout = new javax.swing.GroupLayout(KomponenPanel);
        KomponenPanel.setLayout(KomponenPanelLayout);
        KomponenPanelLayout.setHorizontalGroup(
            KomponenPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(KomponenPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(KomponenPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(KomponenPanelLayout.createSequentialGroup()
                        .addComponent(btnSimpan, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnUbah, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnHapus, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnKosong, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(KomponenPanelLayout.createSequentialGroup()
                        .addGroup(KomponenPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(KomponenPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(bayarlbl, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(nodaftarlbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(idortulbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(siswalbl, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(KomponenPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(KomponenPanelLayout.createSequentialGroup()
                                .addComponent(nodaftartf, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(caribtn, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(KomponenPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(idortutf, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(siswatf)
                                .addComponent(bayarcbb, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(KomponenPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(Cetakbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnKeluar))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        KomponenPanelLayout.setVerticalGroup(
            KomponenPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(KomponenPanelLayout.createSequentialGroup()
                .addGroup(KomponenPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nodaftartf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nodaftarlbl)
                    .addComponent(caribtn)
                    .addComponent(btnKeluar))
                .addGap(12, 12, 12)
                .addGroup(KomponenPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(siswatf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(siswalbl))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(KomponenPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(idortutf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(idortulbl))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(KomponenPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bayarlbl)
                    .addComponent(bayarcbb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(KomponenPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSimpan)
                    .addComponent(btnUbah)
                    .addComponent(btnHapus)
                    .addComponent(btnKosong)
                    .addComponent(Cetakbtn))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        getContentPane().add(KomponenPanel, java.awt.BorderLayout.PAGE_START);

        TabelPanel.setBackground(new java.awt.Color(190, 190, 190));

        PembayaranTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NO PEMBAYARAN", "NO DAFTAR", "ID ORANG TUA", "BAYAR SPP", "NAMA SISWA"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        PembayaranTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PembayaranTableMouseClicked(evt);
            }
        });
        ScrollPane.setViewportView(PembayaranTable);

        javax.swing.GroupLayout TabelPanelLayout = new javax.swing.GroupLayout(TabelPanel);
        TabelPanel.setLayout(TabelPanelLayout);
        TabelPanelLayout.setHorizontalGroup(
            TabelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TabelPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 692, Short.MAX_VALUE)
                .addContainerGap())
        );
        TabelPanelLayout.setVerticalGroup(
            TabelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TabelPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 152, Short.MAX_VALUE)
                .addContainerGap())
        );

        getContentPane().add(TabelPanel, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSimpanActionPerformed
        Pembayaran pembayaran = new Pembayaran();
        pembayaran.setNoDaftar(nodaftartf.getText());
        pembayaran.setIdOrtu(idortutf.getText());
        pembayaran.setBayar(tfspp.getText());
        
              
        if( nodaftartf.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Lengkapi data");
        }else{
            
            Koneksi koneksi = new Koneksi();
            Connection con = koneksi.getConnection();
            PreparedStatement ps;
            try {
                    String qry = "insert into pembayaran " 
                            + "(no_daftar, id_ortu, bayar) "
                            + "values (?,?,?)";
                    
                        ps = con.prepareStatement(qry);
                        ps.setString(1, pembayaran.getNoDaftar());
                        ps.setString(2, pembayaran.getIdOrtu());
                        ps.setString(3,pembayaran.getBayar());
                        ps.executeUpdate();
                        RefreshData();
                        resetForm();
             }catch(SQLException e){
                System.err.println("error :"+e);   
            }
        }  
    }//GEN-LAST:event_btnSimpanActionPerformed

    private void caribtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_caribtnActionPerformed
       String caridaftar = nodaftartf.getText();
       String namasiswa = siswatf.getText();
       Koneksi koneksi = new Koneksi();
            Connection con = koneksi.getConnection();
        
        try {
            
            String sql = "select * from pendaftaran where no_daftar = ?";
            PreparedStatement ps = con.prepareStatement(sql);
            ps.setString(1, caridaftar);
            ResultSet rs = ps.executeQuery();
            if(rs.next()){
                String namadaftar = rs.getString("nama_siswa");
                siswatf.setText(namadaftar);
            }
        } catch(SQLException e){
            System.err.println("error"+e);
        }
    }//GEN-LAST:event_caribtnActionPerformed

    private void siswatfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_siswatfActionPerformed
       String namasiswa = siswatf.getText();
       Koneksi koneksi = new Koneksi();
            Connection con = koneksi.getConnection();
         try {
            String sql1 = "select * from orangtua where nama_siswa = ?";
            PreparedStatement ps = con.prepareStatement(sql1);
            ps.setString(1, namasiswa);
            ResultSet rs = ps.executeQuery();
            if(rs.next()){
                String idortu = rs.getString("id_ortu");
                idortutf.setText(idortu);
            }
        } catch(SQLException e){
            System.err.println("error"+e);
        }
    }//GEN-LAST:event_siswatfActionPerformed

    private void bayarcbbItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_bayarcbbItemStateChanged
        String spp = (String)bayarcbb.getSelectedItem();
        
        switch(spp){
        case"1 Bulan Rp.50.000":
        tfspp.setText("50000");
        break;
        case"2 Bulan Rp.100.000":
        tfspp.setText("100000");
        break;
        case"3 Bulan Rp.150.000":
        tfspp.setText("150000");
        break;
        case"4 Bulan Rp.200.000":
        tfspp.setText("200000");
        break;
        case"5 Bulan Rp.250.000":
        tfspp.setText("250000");
        break;
        case"6 Bulan Rp.300.000":
        tfspp.setText("300000");
        break;
        case"7 Bulan Rp.350.000":
        tfspp.setText("350000");
        break;
        case"8 Bulan Rp.400.000":
        tfspp.setText("400000");
        break;
        case"9 Bulan Rp.450.000":
        tfspp.setText("450000");
        break;
        case"10 Bulan Rp.500.000":
        tfspp.setText("5000000");
        break;
        case"11 Bulan Rp.550.000":
        tfspp.setText("550000");
        break;
        case"1 Tahun Rp 18.250.000":
        tfspp.setText("18250000");
        break;
        }
    }//GEN-LAST:event_bayarcbbItemStateChanged

    private void btnUbahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUbahActionPerformed
        Pembayaran pembayaran = new Pembayaran();
        
        pembayaran.setNoDaftar(nodaftartf.getText());
        pembayaran.setIdOrtu(idortutf.getText());
        pembayaran.setBayar(tfspp.getText());
        pembayaran.setNoPembayaran(nopembayarantf.getText());
        
              
        if( nodaftartf.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Pilih data Yang diubah");
        }else{
            
            Koneksi koneksi = new Koneksi();
            Connection con = koneksi.getConnection();
            PreparedStatement ps;
            try {
                    String qry = "UPDATE pembayaran SET no_daftar = ?, id_ortu = ?, bayar= ? WHERE no_pembayaran = ?";

                    
                        ps = con.prepareStatement(qry);
                        
                        ps.setString(1, pembayaran.getNoDaftar());
                        ps.setString(2, pembayaran.getIdOrtu());
                        ps.setString(3,pembayaran.getBayar());
                        ps.setString(4,pembayaran.getNoPembayaran());
                        ps.executeUpdate();
                        RefreshData();
                        resetForm();
                        JOptionPane.showMessageDialog(null, "Data Berhasil Di update");
             }catch(SQLException e){
                System.err.println("error :"+e);   
            }
        }
    }//GEN-LAST:event_btnUbahActionPerformed

    private void PembayaranTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PembayaranTableMouseClicked
                int i  = PembayaranTable.getSelectedRow();
        if(i>=0) {
//            idortutf.setEditable(false);
            TableModel model  = PembayaranTable.getModel();
            nopembayarantf.setText(model.getValueAt(i, 0).toString());
            nodaftartf.setText(model.getValueAt(i, 1).toString());
            idortutf.setText(model.getValueAt(i, 2).toString());
            
        }else{
            JOptionPane.showMessageDialog(null, "Pilih data yang ingin diubah");
        }
    }//GEN-LAST:event_PembayaranTableMouseClicked

    private void btnKosongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKosongActionPerformed
        resetForm();
    }//GEN-LAST:event_btnKosongActionPerformed

    private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusActionPerformed
        int i = PembayaranTable.getSelectedRow();
        if(i>=0){
        int pilihan = JOptionPane.showConfirmDialog(
                null,
                "Yakin mau hapus ?",
                "Konfirmasi hapus",
                JOptionPane.YES_NO_OPTION);
        if(pilihan==0){
                try{
                    TableModel model = PembayaranTable.getModel();
                    Koneksi koneksi = new Koneksi();
                    Connection con = koneksi.getConnection();
                    String executeQuery = "delete from pembayaran where no_pembayaran =?";
                    PreparedStatement ps = con.prepareStatement(executeQuery);
                    ps.setString(1, nopembayarantf.getText());
                    ps.executeUpdate();
                        RefreshData();
                        resetForm();                   
                } catch (SQLException ex){
                    System.err.println(ex);
                }
            }
            }else{
                JOptionPane.showMessageDialog(null, "Pilih data yang ingin dihapus");
        }
    }//GEN-LAST:event_btnHapusActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        RefreshData();
    }//GEN-LAST:event_formWindowActivated

    private void btnKeluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKeluarActionPerformed
        MainFrame mf = new MainFrame();
        mf.setVisible(true);
        dispose();
    }//GEN-LAST:event_btnKeluarActionPerformed

    private void CetakbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CetakbtnActionPerformed
        try {
        Koneksi koneksi = new Koneksi();
         Connection con= koneksi.getConnection(); 
         String path = "src/Laporan/pembayaran.jasper";
            HashMap<String, Object> parameter = new HashMap();            
            JasperPrint jp = JasperFillManager.fillReport(path, parameter, con);
            JasperViewer viewer = new JasperViewer(jp, false);
        viewer.setVisible(true);
        } catch(Exception e) {
            System.err.println("error report :"+e);
        } 
    }//GEN-LAST:event_CetakbtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PembayaranFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PembayaranFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PembayaranFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PembayaranFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PembayaranFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Cetakbtn;
    private javax.swing.JPanel KomponenPanel;
    private javax.swing.JTable PembayaranTable;
    private javax.swing.JScrollPane ScrollPane;
    private javax.swing.JPanel TabelPanel;
    private javax.swing.JComboBox<String> bayarcbb;
    private javax.swing.JLabel bayarlbl;
    private javax.swing.JButton btnHapus;
    private javax.swing.JButton btnKeluar;
    private javax.swing.JButton btnKosong;
    private javax.swing.JButton btnSimpan;
    private javax.swing.JButton btnUbah;
    private javax.swing.JButton caribtn;
    private javax.swing.JLabel idortulbl;
    private javax.swing.JTextField idortutf;
    private javax.swing.JLabel nodaftarlbl;
    private javax.swing.JTextField nodaftartf;
    private javax.swing.JTextField nopembayarantf;
    private javax.swing.JLabel siswalbl;
    private javax.swing.JTextField siswatf;
    private javax.swing.JTextField tfspp;
    // End of variables declaration//GEN-END:variables
}
